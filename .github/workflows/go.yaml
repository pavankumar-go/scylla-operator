name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    env:
      # We have to change the working directory because of GOPATH
      working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      working-directory-rel: src/github.com/${{ github.repository }}
      GOPATH: ${{ github.workspace }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the GOPATH directory
        uses: actions/checkout@v2
        with:
          path: ${{ env.working-directory-rel }}

      - name: Install python3 deps
        run: pip3 install requests

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v1
        with:
          path: ${{ format('{0}/bin', env.GOPATH) }}
          key: ${{ runner.os }}-${{ hashFiles(format('{0}/install-dependencies.sh', env.working-directory-rel)) }}

      - name: Install deps
        if: steps['cache-tools'].outputs['cache-hit'] != 'true'
        working-directory: ${{ env.working-directory }}
        run: ./install-dependencies.sh

      - name: Go Dependencies
        working-directory: ${{ env.working-directory }}
        run: hack/run_and_diff.py make vendor

      - name: Code Formatting
        working-directory: ${{ env.working-directory }}
        run: hack/run_and_diff.py -v make fmt

      - name: Code Inspection
        working-directory: ${{ env.working-directory }}
        run: hack/run_and_diff.py -v make vet

      - name: Unit Tests
        working-directory: ${{ env.working-directory }}
        run: hack/run_and_diff.py -v make test

      - name: Build
        working-directory: ${{ env.working-directory }}
        run: make local-build

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build nightly image
        if: ${{ github.event_name != 'pull_request' }}
        working-directory: ${{ env.working-directory }}
        run: make nightly

      - name: Publish nightly image
        if: ${{ github.event_name != 'pull_request' }}
        working-directory: ${{ env.working-directory }}
        run: make docker-push

  publish-helm:
    name: Publish nightly Helm Charts
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Cloud SDK
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Publish nightly Helm Chart
        if: ${{ github.event_name != 'pull_request' }}
        working-directory: ${{ env.working-directory }}
        env:
          CHANNEL: nightly
        run: make helm-release

# TODO:
# - E2E
